test_duration: 60
prepare_write_cmd: "cassandra-stress write cl=ALL n=2002  -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3) compaction(strategy=LeveledCompactionStrategy)' -mode cql3 native -rate threads=10 -col 'size=FIXED(1024) n=FIXED(1)' -pop seq=1..2002 -log interval=15"

stress_cmd: ["cassandra-stress write cl=QUORUM duration=60m  -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3) compaction(strategy=LeveledCompactionStrategy)' -mode cql3 native -rate threads=5 -col 'size=FIXED(1024) n=FIXED(1)' -pop seq=4002..6002 -log interval=15"]
stress_read_cmd: ["cassandra-stress read cl=ONE duration=60m -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3) compaction(strategy=LeveledCompactionStrategy)' -mode cql3 native -rate threads=5 -col 'size=FIXED(1024) n=FIXED(1)' -pop seq=1..2002 -log interval=5"]
#run_fullscan: ['{"mode": "table_and_aggregate", "ks_cf": "keyspace1.standard1", "interval": 5}']
n_db_nodes: 2
n_loaders: 1
n_monitor_nodes: 1

instance_type_db: 'i4i.large'

#nemesis_class_name: 'SisyphusMonkey'
#nemesis_selector: ['networking']
#nemesis_seed: '002'
nemesis_interval: 10
#nemesis_multiply_factor: 15

extra_network_interface: true
# when using multiple network interfaces in the same subnet, we run into the possibility
# that the interface we tried to contact does not respond, but the other one does.
# To prevent that, we use the public IP address to contact the nodes instead.
ip_ssh_connections: 'public'

nemesis_during_prepare: false

user_prefix: 'longevity-200gb-48h-network'

space_node_threshold: 6442

server_encrypt: true
authenticator: 'PasswordAuthenticator'
authenticator_user: cassandra
authenticator_password: cassandra
authorizer: 'CassandraAuthorizer'

#network_interfaces:
#  - 
